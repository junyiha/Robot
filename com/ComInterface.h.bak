/*****************************************************************
* 函数名称： ComInterface
* 功能描述： ·基于RobotCom类和IOCom类，建立机器人对象和io对象的统一接口
*          ·使用单例模式，全局唯一且易获取类的引用，方便跨线程访问
* 参数说明： 参数说明
* 返回值：   返回值说明
******************************************************************/
#ifndef COMINTERFACE_H
#define COMINTERFACE_H

#include <QObject>
#include <QThread>

#include "RobotCom.h"
#include "IOCom.h"


class ComInterface : public QObject
{
    Q_OBJECT
public:
    //饿汉式单例模式
    static ComInterface *getInstance();
    ComInterface(const ComInterface&) = delete;
    ComInterface& operator = (const ComInterface&) = delete;

    //信号和槽连接中心
    void connectCenter();

    //接口成员
    RobotCom	m_cRobot;
    IOCom		m_cIOA;
    IOCom		m_cIOB;
//    std::atomic_flag m_RecvIOLock = ATOMIC_FLAG_INIT;
//    std::atomic_flag m_SendIOLock = ATOMIC_FLAG_INIT;
//    std::atomic_flag m_RecvRobotLock = ATOMIC_FLAG_INIT;
//    std::atomic_flag m_SendRobotLock = ATOMIC_FLAG_INIT;

    //线程成员
    QThread* m_cRobotThread;
    QThread* m_cIOAThread;
    QThread* m_cIOBThread;


signals:
    //*************机器人控制相关接口信号*************
    void sigConnectToRobot(char *IpAdr, int port);

    void sigDisconnectFromRobot();

    void sigRobotReset();

    void sigRobotPower(bool enble);

    void sigRobotHome();

    void sigRobotHalt();

    void sigRobotStop();

    void sigRobotMove(E_MotionMode mode, double pos[], double vel[], int freedom);

    void sigLinkReset(int index);

    void sigLinkPower(int index, bool enble);

    void sigLinkHome(int index);

    void sigLinkHalt(int index);

    void sigLinkStop(int index);

    void sigLinkMove(int index, E_MotionMode mode, double pos[], double vel[], int freedom);

    void sigJointPower(int index, bool enble);

    void sigJointReset(int index);

    void sigJointHome(int index, double pos);

    void sigJointHalt(int index);

    void sigJointStop(int index);

    bool sigJointMove(int index, eMC_Motion mode, double pos = 0, double vel = 0, double end_vel = 0, double distance = 0);

    //*************IO控制相关接口信号*************
    void sigSetIOA(byte value[]);

    void sigSetIOB(byte value[]);

private:
    explicit ComInterface(QObject *parent = nullptr);
    ~ComInterface();

public slots:

};

#endif // COMINTERFACE_H
